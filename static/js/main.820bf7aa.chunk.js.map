{"version":3,"sources":["Components/HeaderComponents.js","Components/TextFieldComponent.js","Components/FooterComponent.js","Components/MainComponent.js","Components/ExitComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","id","expand","NavbarBrand","TextContainer","$","document","ready","errorCount","bind","e","preventDefault","getElementById","innerHTML","console","log","window","location","replace","addEventListener","event","key","body","ctrlKey","indexOf","shiftKey","click","mistakeCounter","string1","text","string2","val","strSplit","split","strSplit2","i","length","alertmsg","result","localeCompare","percentage","align","Row","Col","sm","name","md","rows","cols","placeholder","Button","FooterComponent","Container","fluid","href","Main","React","Component","ExitPage","App","isMobile","navigator","userAgent","match","on","$containerHeight","height","$containerWidth","width","alert","ar","Array","keydown","which","inArray","exact","path","component","to","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.820bf7aa.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, NavbarBrand } from 'react-bootstrap';\n\nfunction Header() {\n\n    return (\n        <div className = \"container2\">\n            <Navbar id=\"nav-disable\" expand=\"lg\">\n                <NavbarBrand className=\"nav-title\">Blind Typing v1.04</NavbarBrand>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport $ from 'jquery';\n\nfunction TextContainer() {\n\n    $(document).ready(function () {\n\n        // if (localStorage.getItem('isAttemptDone') == null) {\n        //     localStorage.setItem('isAttemptDone', false);\n        //     console.log(localStorage.getItem('isAttemptDone'));\n        // }\n        // if (localStorage.getItem('isAttemptDone')) {\n        //     window.location.replace(\"https://tejasraibagi26.github.io/blindcode/no_attempts\");\n        //     // window.location.replace(\"http://localhost:3000/blindcode/no_attempts\");\n\n        // }\n        // else {\n        //     localStorage.setItem('isAttemptDone', true);\n        //     console.log(localStorage.getItem('isAttemptDone'));\n        // }\n        // if(localStorage.getItem('isAttemptDone') != null){\n        //     localStorage.removeItem('isAttemptDone');\n        // }\n\n        var errorCount = 0;\n        var attemptLeft = 1;\n\n        $('#code-template').bind(\"contextmenu\", function (e) {\n            e.preventDefault();\n            var alertmsg = document.getElementById('alert-msg');\n            alertmsg.innerHTML = \"Right Click disabled.\"\n            errorCount += 1;\n            console.log(errorCount);\n            if (errorCount === 3) {\n                attemptLeft -= 1;\n                console.log(\"Function called\");\n                window.location.replace(\"https://tejasraibagi26.github.io/blindcode/exit\")\n                // window.location.replace(\"http://localhost:3000/blindcode/exit\");\n                ;\n            }\n        });\n        var el = document.getElementById('textarea');\n        el.addEventListener('keydown', function (event) {\n            const key = event.key;\n            if (key === \"Backspace\" || key === \"Delete\") {\n                event.preventDefault();\n                var alertmsg = document.getElementById('alert-msg');\n                alertmsg.innerHTML = \"You cannot delete!.\"\n                // alert('You cannot delete!');\n            }\n        });\n        document.body.addEventListener('keydown', event => {\n            if (event.ctrlKey && 'cvxspwuazA'.indexOf(event.key) !== -1 || event.ctrlKey && event.shiftKey && 'cjikzeKCJIZE'.indexOf(event.key) !== -1) {\n                event.preventDefault();\n                var alertmsg = document.getElementById('alert-msg');\n                alertmsg.innerHTML = \"Function Disabled\";\n                errorCount += 1;\n                console.log(errorCount);\n                if (errorCount === 3) {\n                    attemptLeft -= 1;\n                    console.log(\"Function called\");\n                    window.location.replace(\"https://tejasraibagi26.github.io/blindcode/exit\");\n                    // window.location.replace(\"http://localhost:3000/blindcode/exit\");\n\n                }\n            }\n        })\n\n        // if(attemptLeft == 0){\n        //     window.location.replace(\"https://tejasraibagi26.github.io/blindcode/no_attempts\");\n        // }\n\n        $('#button').click(function () {\n            var mistakeCounter = 0;\n            attemptLeft -= 1;\n            var string1 = $('#text').text();\n            var string2 = $('#textarea').val();\n            var strSplit = string1.split(\" \");\n            var strSplit2 = string2.split(\" \");\n            console.log(strSplit, strSplit2);\n            if (string2 !== \"\") {\n                for (var i = 0; i <= strSplit.length - 1; i++) {\n                    var result = strSplit[i].localeCompare(strSplit2[i]);\n                    console.log(i);\n                    console.log(result);\n                    if (result !== null) {\n                        if (result === -1) {\n                            var alertmsg = document.getElementById('alert-msg');\n                            alertmsg.innerHTML = \"Total Mistakes \" + mistakeCounter;\n                            mistakeCounter += 1;\n                            console.log(\"Total Mistakes \" + mistakeCounter);\n                        }\n                        else {\n                            var alertmsg = document.getElementById('alert-msg');\n                            alertmsg.innerHTML = \"Strings Matched\";\n                            console.log(\"Total Mistakes \" + mistakeCounter);\n                            alertmsg.innerHTML = \"Total Mistakes \" + mistakeCounter;\n                        }\n                    }\n                    else {\n                        var alertmsg = document.getElementById('alert-msg');\n                        alertmsg.innerHTML = \"Enter string please\";\n                    }\n                }\n                var totalLetters = strSplit.length;\n                var percentage = ((totalLetters - mistakeCounter) / 100) * 100;\n                console.log(percentage);\n            }\n        })\n    });\n\n    return (\n        <div id=\"code-template\">\n            <p className=\"note\" align=\"center\">Note: You cannot delete any text, so make sure to type precisely!</p>\n            <Row className=\"justify-content-md-center\">\n                <Col sm={5}>\n                    <div className=\"container\">\n                        <div className=\"header\">\n                            <h2 className=\"text-head\"> Paragraph to copy </h2>\n                            <p name=\"quest\" className=\"text\" id=\"text\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n                        </div>\n                    </div>\n                </Col>\n                <Col md={5}>\n                    <div className=\"container\">\n                        <div className=\"header\">\n                            <h2 className=\"text-head\"> Write here (Hidden) </h2>\n                            <textarea name=\"answer\" id=\"textarea\" className=\"answer-holder\" rows='13' cols='33' placeholder=\"Answer\"></textarea>\n                        </div>\n                    </div>\n                </Col>\n\n            </Row>\n            <div className=\"row justify-content-center\">\n                <h4 id=\"alert-msg\" className=\"row justify-content-center alerts\"></h4>\n                <Button id=\"button\">SUBMIT</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default TextContainer;","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nfunction FooterComponent() {\n    return (\n        <footer className = \"footer-container\">\n            <div className=\"footer-copyright text-center py-3\">\n                <Container fluid>\n                    Made with &hearts; by <a href=\"https://tejasraibagi26.github.io/info/\"> Tejas Raibagi </a>\n                </Container>\n            </div>\n        </footer>\n    );\n}\n\nexport default FooterComponent;","import React from 'react';\nimport Header from './HeaderComponents';\nimport TextContainer from './TextFieldComponent';\nimport FooterComp from './FooterComponent';\n\nclass Main extends React.Component {\n\n    render() {\n        return (\n            <main>\n                <Header />\n                <TextContainer />\n                <FooterComp />\n            </main>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\n\nfunction ExitPage() {\n    return(\n        <div>\n            <h1> Error limit reached!</h1>\n        </div>\n    );\n}\n\nexport default ExitPage;","import React from 'react';\nimport Main from './Components/MainComponent';\nimport ExitPage from './Components/ExitComponent';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport $ from 'jquery';\n\nimport './CSS/Main.css'\n\nfunction App() {\n\n  $(document).ready(function () {\n    var isMobile = !!navigator.userAgent.match(/iPhone/i) || !!navigator.userAgent.match(/Android/i) || false;\n    console.log(isMobile);\n\n    $(window).on('resize', function () {\n      var $containerHeight = $(window).height();\n      var $containerWidth = $(window).width();\n\n      if (!isMobile) {\n        if ($containerHeight <= 1200 || $containerWidth <= 1500) {\n          alert('Do not move away from the website');\n          if (document.getElementById('alert-msg') != null) {\n            var alertmsg = document.getElementById('alert-msg');\n            alertmsg.innerHTML = \"Do not move away from the website\";\n          }\n        }\n      }\n    });\n  })\n\n  $(document).ready(function () {\n    $('#nav-disable').bind(\"contextmenu\", function (e) {\n      e.preventDefault();\n    });\n  });\n\n  var ar = new Array(37, 38, 39, 40, 116, 118, 120, 123);\n  $(document).keydown(function (e) {\n    var key = e.which;\n    if ($.inArray(key, ar) > -1 && e.shiftKey) {\n      e.preventDefault();\n      if (document.getElementById('alert-msg') != null) {\n        var alertmsg = document.getElementById('alert-msg');\n        alertmsg.innerHTML = \"Function Disabled\";\n      }\n      return false;\n    }\n    return true;\n  });\n\n  $(document).keydown(function (e) {\n    var key = e.which;\n    if (key === 123) {\n      e.preventDefault();\n      if (document.getElementById('alert-msg') != null) {\n        var alertmsg = document.getElementById('alert-msg');\n        alertmsg.innerHTML = \"Function Disabled\";\n      }\n    }\n  })\n\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/blindcode\" component={Main} />\n        <Redirect exact path = \"/\" to = \"/blindcode/exit\" component={ExitPage} />\n      </Switch>\n    </Router>\n  );\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}